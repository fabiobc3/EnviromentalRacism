{"version":3,"sources":["components/DisplayZIP.js","components/GetZip.js","components/EnvRac.js","components/DisplayData.js","components/Graph.js","components/Learn.js","components/EnvCom.js","components/App.js","reportWebVitals.js","index.js"],"names":["DisplayZIP","props","zip","GetZip","useState","newZip","setNewZip","setZip","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","EnvRac","className","DisplayData","cO2E_Emissions","a","url","data","fetch","response","json","responseData","counter","map","count","CO2E_EMISSION","methaneEmissions","GAS_NAME","biogenicCO2Emissions","cO2Emissions","nitrousOxideEmissions","cO2EData","setcO2EData","methaneData","setmethaneData","biogenicCO2Data","setbiogenicCO2Data","cO2Data","setcO2Data","nitrousOxideData","setnitrousOxideData","useEffect","cO2E","methane","biogenicCO2","cO2","nitrousOxide","name","emissions","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","Graph","Learn","EnvCom","App","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f8ff230.chunk.js","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\n\r\nfunction DisplayZIP(props){\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                Submitted ZIP: {props.zip}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayZIP;","import React, {useState, useEffect, useContext} from 'react';\r\nimport CO2E_Emissions from './CO2E_Emissions';\r\nimport DisplayZIP from './DisplayZIP';\r\n\r\nfunction GetZip(props){\r\n\r\n    const[newZip, setNewZip] = useState(\"\");\r\n    let setZip = props.setZip\r\n\r\n    const handleSubmitt = (e) => {\r\n        e.preventDefault();\r\n        setZip(newZip);\r\n        setNewZip(\"\");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <form onSubmit={handleSubmitt}>\r\n                    <input type=\"text\" placeholder=\"Enter zip here\" value={newZip} onChange={\r\n                        e => setNewZip(e.target.value)\r\n                        }>\r\n                    </input>\r\n                    <button type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetZip;","function EnvRac(){\r\n    return(\r\n        <div>\r\n            <section className=\"head\">Environmental racism</section> is the term is used to describe the disproportionate environmental injustice that occurs within neighborhoods that are composed by a significant number of minority groups and people of lower socio-economic status\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EnvRac;","import React, {useEffect, useState, PureComponent} from 'react';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nfunction DisplayData(props){\r\n    \r\n    async function cO2E_Emissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\";\r\n    \r\n        let data = 0;\r\n\r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            const count = response.CO2E_EMISSION;\r\n            counter = counter + count;\r\n        }); \r\n        \r\n        data = counter;\r\n    \r\n        return data;\r\n        \r\n    };\r\n\r\n    async function methaneEmissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Methane'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n\r\n        data = counter;\r\n        \r\n        return data\r\n    };\r\n\r\n    async function biogenicCO2Emissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Biogenic CO2'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n\r\n        data = counter;\r\n    \r\n        return data\r\n    };\r\n\r\n    async function cO2Emissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Carbon Dioxide'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n    \r\n        data = counter;\r\n\r\n        return data\r\n    };\r\n\r\n    async function nitrousOxideEmissions(){\r\n\r\n        const baseLink = \"https://enviro.epa.gov/enviro/efservice/V_GHG_EMITTER_GAS/YEAR/=/2019/ZIP/=/\";\r\n        const zip = props.zip;\r\n        const url = baseLink + zip + \"/JSON\"\r\n    \r\n        let data = 0;\r\n      \r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        let counter = 0;\r\n        responseData.map(response => {\r\n            if(response.GAS_NAME == 'Nitrous Oxide'){\r\n                const count = response.CO2E_EMISSION;\r\n                counter = counter + count;\r\n            }\r\n        }); \r\n           \r\n        data = counter;\r\n\r\n        return data\r\n    };\r\n\r\n    const[cO2EData, setcO2EData] = useState();\r\n    const[methaneData, setmethaneData] = useState();\r\n    const[biogenicCO2Data, setbiogenicCO2Data] = useState();\r\n    const[cO2Data, setcO2Data] = useState();\r\n    const[nitrousOxideData, setnitrousOxideData] = useState();\r\n  \r\n    useEffect( async() => {\r\n        let cO2E = await cO2E_Emissions();\r\n        let methane = await methaneEmissions();\r\n        let biogenicCO2 = await biogenicCO2Emissions();\r\n        let cO2 = await cO2Emissions();\r\n        let nitrousOxide = await nitrousOxideEmissions(); \r\n        setcO2EData(cO2E);\r\n        setmethaneData(methane);\r\n        setbiogenicCO2Data(biogenicCO2);\r\n        setcO2Data(cO2);\r\n        setnitrousOxideData(nitrousOxide);\r\n    });\r\n\r\n    const data = [\r\n        {\r\n          name: 'All Emissions in their CO2 Equivalent',\r\n          emissions: cO2EData,\r\n        },\r\n        {\r\n          name: 'Methane',\r\n          emissions: methaneData,\r\n        },\r\n        {\r\n          name: 'Biogenic CO2',\r\n          emissions: biogenicCO2Data,\r\n        },\r\n        {\r\n          name: 'CO2',\r\n          emissions: cO2Data,\r\n        },\r\n        {\r\n          name: 'Nitrous Oxide',\r\n          emissions: nitrousOxideData\r\n        }\r\n      ];\r\n\r\n    return (\r\n        <BarChart \r\n            width={500}\r\n            height={300} \r\n            data={data}\r\n            margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"emissions\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n    );\r\n};\r\n  \r\nexport default DisplayData;","import DisplayData from './DisplayData';\r\n\r\nfunction Graph(props){\r\n    let zip = props.zip;\r\n    return(\r\n        <div>\r\n            <DisplayData zip={zip}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Graph;","function Learn(){\r\n    return(\r\n        <div>\r\n            <section className=\"head\">Learn more about what you can do.</section>\r\n            <div className=\"bullet\">\r\n                <li>\r\n                    Increase awareness by letting your fellow community members know\r\n                </li>\r\n                <li>\r\n                    Research your local communities issue more in depth so that you can take precautions against the possible environmental side effects\r\n                </li>\r\n                <li>\r\n                    Contact your local government representatives\r\n                </li>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Learn;","function EnvCom(){\r\n    return(\r\n        <div>\r\n            <section className=\"head\">Environmental Racism in Communities</section>\r\n            Enter a zip-code to see information about environmental racism in that community:\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EnvCom;","import '../App.css';\nimport React, {useState, useEffect, useContext} from 'react';\nimport CO2E_Emissions from './CO2E_Emissions';\nimport GetZip from './GetZip';\nimport DisplayZIP from './DisplayZIP';\nimport Generators from './Generators';\nimport EnviroJust from './EnviroJust';\nimport MethaneEmissions from './MethaneEmissions';\nimport BiogenicCO2Emissions from './BiogenicCO2Emissions';\nimport CO2Emissions from './CO2Emissions';\nimport NitrousOxideEmissions from './NitrousOxideEmissions';\nimport EnvRac from './EnvRac';\nimport Graph from './Graph';\nimport Learn from './Learn';\nimport EnvCom from './EnvCom';\n\nfunction App() {\n\n  const [zip, setZip] = useState(\"\");\n\n  let isEmptyZip = (zip === \"\") \n\n  return (\n    <div className=\"App\">\n      <div class=\"flex-container1\">\n        <div className=\"EnvRac\">\n          <EnvRac/>\n        </div>\n      </div>\n      <div className=\"flex-container2\">\n        <div className=\"inner-container1\">\n          <div className=\"EnvCom\">\n              <EnvCom/>\n          </div>\n          <div className=\"Zip\">\n            <GetZip setZip={setZip}/>\n            <DisplayZIP zip={zip}/>\n\n\n            {/* {isEmptyZip ? \"\" : <CO2E_Emissions zip={zip}/>}\n            {isEmptyZip ? \"\" : <Generators zip={zip}/>}\n            {isEmptyZip ? \"\" : <EnviroJust zip={zip}/>}\n            {isEmptyZip ? \"\" : <MethaneEmissions zip={zip}/>}\n            {isEmptyZip ? \"\" : <BiogenicCO2Emissions zip={zip}/>}\n            {isEmptyZip ? \"\" : <CO2Emissions zip={zip}/>}\n            {isEmptyZip ? \"\" : <NitrousOxideEmissions zip={zip}/>} */}\n\n\n          </div>\n        </div>\n        <div className=\"inner-container2\">\n          <div className=\"Graph\">\n           <Graph zip={zip}/>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex-container4\">\n        <div className=\"Learn\">\n          <Learn/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}